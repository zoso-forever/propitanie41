@use 'sass:math';

.intro {
    position: relative;

    @include mq($from: wide) {
        &::after {
            @include square($size: 670px);

            content: '';
            position: absolute;
            background: url('../images/intro-dish1.png') no-repeat 50% 50% / contain;
            left: -168px;
            top: calc(50% + 40px);
            transform: translateY(-50%);
        }

        &::before {
            content: '';
            position: absolute;
            background: url('../images/intro-dish2.png') no-repeat 50% 50% / contain;
            width: 372px;
            height: 353px;
            right: -76px;
            bottom: 30px;
            transform: translateY(50%);
        }
    }

    &__container {
        @include mq($from: desktop) {
            display: flex;
            flex-wrap: wrap;
            justify-content: space-between;
            max-width: 900px;
            margin-left: auto;
            margin-right: auto;
        }

        @include mq($from: wide) {
            max-width: 1075px;
        }
    }

    &__step {
        display: flex;
        align-items: flex-start;

        @include mq($until: desktop) {
            &:not(:last-child) {
                margin-bottom: 15px;
            }
        }

        @include mq($from: desktop) {
            flex: 0 0 calc(50% - 25px);

            &:nth-last-child(n+3) {
                margin-bottom: 50px;
            }
        }
    }

    &__inner {
        flex: 1 1 auto;
    }

    &__count {
        $size: 26px;

        @include square($size: $size);

        flex: 0 0 $size;
        margin-right: 10px;
        position: relative;
        top: -5px;

        @include mq($from: desktop) {
            $size-desktop: 69px;

            @include square($size: $size-desktop);

            flex-basis: $size-desktop;
            margin-right: 30px;
            top: 0;
        }

        @include mq($from: wide) {
            $size-wide: 96px;

            @include square($size: $size-wide);

            flex-basis: $size-wide;
            margin-right: 35px;
        }
    }

    &__number {
        display: block;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        font-family: $accent-font-family;
        font-size: 12px;
        font-weight: 600;
        color: $color-black;

        @include mq($from: desktop) {
            font-size: 30px;
        }

        @include mq($from: wide) {
            font-size: 61px;
        }
    }

    &__title {
        @extend %appear-animation;

        font-size: 16px;
        line-height: 1.06;
        font-weight: 600;
        font-family: $accent-font-family;
        color: $color-black;
        margin-bottom: 8px;

        @include mq($from: desktop) {
            font-size: 24px;
            margin-bottom: 10px;
            line-height: 1.2;
        }

        @include mq($from: wide) {
            margin-bottom: 20px;
        }
    }

    &__lead {
        @extend %appear-animation;

        font-size: 12px;
        line-height: 1.3;
        transition-delay: .12s, .12s !important;

        @include mq($from: desktop) {
            font-size: 14px;
            line-height: 1.35;
        }

        @include mq($from: wide) {
            font-size: 18px;
            line-height: 1.45;
        }
    }
}

.step-number {
    $chart-colors: (
        $color-green,
        $color-yellow,
        $color-blue,
        $color-red
    );
    $animation-duration: .8s;
    $r: 13;
    $c: math.$pi * 2 * $r;
    $length: length($list: $chart-colors);
    $offset: math.div($number1: $c, $number2: $length);
    $rotate: math.div($number1: 360, $number2: $length);

    &__s {
        transform-origin: 50% 50%;
        stroke-dasharray: 0 $c;
        stroke-width: 2;
    }

    .appear-animation--is-visible &__s {
        stroke-dasharray: $offset $c;
    }

    @for $i from 1 through $length {
        &__s--#{$i} {
            $animation-delay: .1s;

            stroke: nth($list: $chart-colors, $n: $i);
            transform: rotate(#{$rotate * $i}deg);
            transition: stroke-dasharray #{$animation-duration} $ease-out-cubic #{$animation-delay};
        }
    }
}
